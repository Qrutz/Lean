{
    // Custom Cloud Server Configuration
    // This configuration file works with your own cloud infrastructure instead of QuantConnect
    "environment": "backtesting", // "live-paper", "backtesting", "live-custom"
    // algorithm class selector
    "algorithm-type-name": "BasicTemplateFrameworkAlgorithm",
    // Algorithm language selector - options CSharp, Python
    "algorithm-language": "CSharp",
    //Physical DLL location
    "algorithm-location": "QuantConnect.Algorithm.CSharp.dll",
    //"algorithm-location": "../../../Algorithm.Python/BasicTemplateFrameworkAlgorithm.py",
    // engine
    "data-folder": "../../../Data/",
    // debugging configuration
    "debugging": false,
    "debugging-method": "LocalCmdline",
    // handlers
    "log-handler": "QuantConnect.Logging.CompositeLogHandler",
    "messaging-handler": "QuantConnect.Messaging.Messaging",
    "job-queue-handler": "QuantConnect.Queues.JobQueue",
    "api-handler": "QuantConnect.Api.CustomApi",
    "map-file-provider": "QuantConnect.Data.Auxiliary.LocalDiskMapFileProvider",
    "factor-file-provider": "QuantConnect.Data.Auxiliary.LocalDiskFactorFileProvider",
    "data-provider": "QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider",
    "data-channel-provider": "DataChannelProvider",
    "object-store": "QuantConnect.Lean.Engine.Storage.LocalObjectStore",
    "data-aggregator": "QuantConnect.Lean.Engine.DataFeeds.AggregationManager",
    // limits on number of symbols to allow
    "symbol-minute-limit": 10000,
    "symbol-second-limit": 10000,
    "symbol-tick-limit": 10000,
    // Ignore unknown asset types from brokerages
    "ignore-unknown-asset-holdings": true,
    // log missing data files, useful for debugging
    "show-missing-data-logs": false,
    // For live trading during warmup we limit the amount of historical data fetched from the history provider and expect the data to be on disk for older data
    "maximum-warmup-history-days-look-back": 5,
    // limits the amount of data points per chart series. Applies only for backtesting
    "maximum-data-points-per-chart-series": 1000000,
    "maximum-chart-series": 30,
    // if one uses true in following token, market hours will remain open all hours and all days.
    // if one uses false will make lean operate only during regular market hours.
    "force-exchange-always-open": false,
    // save list of transactions to the specified csv file
    "transaction-log": "",
    // Prefix for Windows reserved filenames
    "reserved-words-prefix": "@",
    // Your cloud server API credentials
    "job-user-id": "0",
    "api-access-token": "",
    "job-organization-id": "",
    // Your cloud server API configuration
    "api-url": "https://your-cloud-server.com/api/v2/",
    "api-key": "",
    "api-secret": "",
    // live data configuration for your cloud server
    "live-data-url": "ws://your-cloud-server.com/api/v2/live/data/",
    "live-data-port": 8020,
    // live portfolio state
    "live-cash-balance": "",
    "live-holdings": "[]",
    // Your cloud server's data providers
    "custom-data-provider-url": "https://your-cloud-server.com/api/v2/data/",
    "custom-data-provider-key": "",
    // parameters to set in the algorithm (the below are just samples)
    "parameters": {
        "ema-fast": 10,
        "ema-slow": 20
    },
    // specify supported languages when running regression tests
    "regression-test-languages": [
        "CSharp",
        "Python"
    ],
    // Additional paths to include in python for import resolution
    "python-additional-paths": [],
    "environments": {
        // defines the 'backtesting' environment
        "backtesting": {
            "live-mode": false,
            "setup-handler": "QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler",
            "result-handler": "QuantConnect.Lean.Engine.Results.BacktestingResultHandler",
            "data-feed-handler": "QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed",
            "real-time-handler": "QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler",
            "history-provider": [
                "QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider"
            ],
            "transaction-handler": "QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler"
        },
        // defines the 'live-paper' environment
        "live-paper": {
            "live-mode": true,
            // the paper brokerage requires the BacktestingTransactionHandler
            "live-mode-brokerage": "PaperBrokerage",
            "setup-handler": "QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler",
            "result-handler": "QuantConnect.Lean.Engine.Results.LiveTradingResultHandler",
            "data-feed-handler": "QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed",
            "data-queue-handler": [
                "QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue"
            ],
            "real-time-handler": "QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler",
            "transaction-handler": "QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler"
        },
        // defines the 'live-custom' environment for your cloud server
        "live-custom": {
            "live-mode": true,
            // real brokerage implementations require the BrokerageTransactionHandler
            "live-mode-brokerage": "CustomBrokerage",
            "data-queue-handler": [
                "CustomDataQueueHandler"
            ],
            "setup-handler": "QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler",
            "result-handler": "QuantConnect.Lean.Engine.Results.LiveTradingResultHandler",
            "data-feed-handler": "QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed",
            "real-time-handler": "QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler",
            "transaction-handler": "QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler",
            "history-provider": [
                "CustomHistoryProvider",
                "SubscriptionDataReaderHistoryProvider"
            ]
        }
    }
}